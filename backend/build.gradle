plugins {
    id 'java'
    id 'application'
    id 'com.adarshr.test-logger' version '4.0.0'
}

group = 'knca'
version = '1.0.0'
description = 'An application for creating a test CA, signing XML using NCALayer and test user certificate, verifying xml signatures using Kalkan.'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* app */
    implementation 'io.vertx:vertx-core:4.4.6'
    implementation 'io.vertx:vertx-web:4.4.6'
    implementation 'io.vertx:vertx-config:4.4.6'
    implementation 'io.vertx:vertx-config-yaml:4.4.6'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    /* logs */
    implementation 'org.slf4j:slf4j-api:1.7.36'
    runtimeOnly 'org.slf4j:slf4j-simple:2.0.11'

    /* misc */
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    /* bytecode for proxies */
    implementation 'net.bytebuddy:byte-buddy:1.17.7'
    runtimeOnly 'net.bytebuddy:byte-buddy-agent:1.17.7'

    /* tests */
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    testImplementation 'io.vertx:vertx-junit5:4.4.6'

    // Optional Kalkan dependencies - runtime only, dynamically included if jars are present
    if (fileTree('lib').include('*.jar').files.size() > 0) {
        compileOnly fileTree(dir: 'lib', include: '*.jar')
        runtimeOnly fileTree(dir: 'lib', include: '*.jar')

        testImplementation fileTree(dir: 'lib', include: '*.jar')
    }
}

application {
    mainClass = 'knca.signer.App'
}

task runGenerator(type: JavaExec) {
    mainClass = 'knca.signer.example.Generator'
    classpath = sourceSets.main.runtimeClasspath
}

task runReader(type: JavaExec) {
    mainClass = 'knca.signer.example.Reader'
    classpath = sourceSets.main.runtimeClasspath
}

task runValidator(type: JavaExec) {
    mainClass = 'knca.signer.example.Validator'
    classpath = sourceSets.main.runtimeClasspath
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyStatic(type: Copy) {
    from '../frontend/dist'
    into 'src/main/resources/static'
}

clean {
    doLast {
        delete 'src/main/resources/static'
    }
}
